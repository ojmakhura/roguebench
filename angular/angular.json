{
	"$schema": "./node_modules/@angular/cli/lib/config/schema.json",
	"version": 1,
	"newProjectRoot": "projects",
	"projects": {
		"roguebench": {
			"projectType": "application",
			"schematics": {
				"@schematics/angular:component": {
					"style": "scss"
				}
			},
			"root": "",
			"sourceRoot": "src",
			"prefix": "app",
			"architect": {
				"build": {
					"builder": "@angular-architects/native-federation:build",
					"options": {
            "outputPath": "dist/roguebench",
            "index": "src/index.html",
            "browser": "src/main.ts",
            "polyfills": [
              "zone.js",
              "src/polyfills.ts",
              "@angular/localize/init"
            ],
            "tsConfig": "tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              {
                "glob": "**/*",
                "input": "public"
              }
            ],
            "styles": [
              "@angular/material/prebuilt-themes/azure-blue.css",
              "node_modules/bootstrap/dist/css/bootstrap.css",
              "node_modules/bootstrap-icons/font/bootstrap-icons.css",
              "src/styles.scss"
            ],
            "scripts": [
              "node_modules/jquery/dist/jquery.min.js",
              "node_modules/bootstrap/dist/js/bootstrap.min.js"
            ]
          },
					"configurations": {
						"production": {
							"target": "roguebench:esbuild:production"
						},
						"development": {
							"target": "roguebench:esbuild:development",
							"dev": true
						}
					},
					"defaultConfiguration": "production"
				},
				"serve": {
					"builder": "@angular-architects/native-federation:build",
					"options": {
						"target": "roguebench:serve-original:development",
						"rebuildDelay": 0,
						"dev": true,
						"port": 0,
            "styles": [
              "@angular/material/prebuilt-themes/azure-blue.css",
              "node_modules/bootstrap/dist/css/bootstrap.css",
              "node_modules/bootstrap-icons/font/bootstrap-icons.css",
              "src/styles.scss"
            ],
            "scripts": [
              "node_modules/jquery/dist/jquery.min.js",
              "node_modules/bootstrap/dist/js/bootstrap.min.js"
            ]
					}
				},
				"extract-i18n": {
					"builder": "@angular-devkit/build-angular:extract-i18n"
				},
				"test": {
					"builder": "@angular-devkit/build-angular:karma",
					"options": {
						"polyfills": [
							"zone.js",
							"zone.js/testing"
						],
						"tsConfig": "tsconfig.spec.json",
						"inlineStyleLanguage": "scss",
						"assets": [
							{
								"glob": "**/*",
								"input": "public"
							}
						],
						"styles": [
              "src/styles.scss"
						],
						"scripts": []
					}
				},
				"esbuild": {
					"builder": "@angular-devkit/build-angular:application",
					"options": {
						"outputPath": "dist/roguebench",
						"index": "src/index.html",
						"browser": "src/main.ts",
						"polyfills": [
							"zone.js",
							"es-module-shims"
						],
						"tsConfig": "tsconfig.app.json",
						"inlineStyleLanguage": "scss",
						"assets": [
							{
								"glob": "**/*",
								"input": "public"
							}
						],
						"styles": [
							"src/styles.scss"
						],
						"scripts": []
					},
					"configurations": {
						"production": {
							"budgets": [
								{
									"type": "initial",
									"maximumWarning": "500kB",
									"maximumError": "1MB"
								},
								{
									"type": "anyComponentStyle",
									"maximumWarning": "4kB",
									"maximumError": "8kB"
								}
							],
							"outputHashing": "all"
						},
						"development": {
							"optimization": false,
							"extractLicenses": false,
							"sourceMap": true
						}
					},
					"defaultConfiguration": "production"
				},
				"serve-original": {
					"builder": "@angular-devkit/build-angular:dev-server",
					"configurations": {
						"production": {
							"buildTarget": "roguebench:esbuild:production"
						},
						"development": {
							"buildTarget": "roguebench:esbuild:development"
						}
					},
					"defaultConfiguration": "development",
					"options": {
						"buildTarget": "roguebench:build",
						"proxyConfig": "./proxy.conf.json",
						"port": 4200
					}
				}
			}
		}
	}
}
